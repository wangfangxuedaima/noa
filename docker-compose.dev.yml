version: '3.8'

services:
  # 开发环境的NestJS应用
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-here-dev
      - JWT_EXPIRES_IN=7d
      - DB_HOST=mysql-dev
      - DB_PORT=3306
      - DB_USERNAME=nestjs
      - DB_PASSWORD=nestjs123
      - DB_DATABASE=nestjs_api_dev
    depends_on:
      mysql-dev:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - nestjs-dev-network

  # 开发环境MySQL
  mysql-dev:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=nestjs_api_dev
      - MYSQL_USER=nestjs
      - MYSQL_PASSWORD=nestjs123
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - nestjs-dev-network

volumes:
  mysql_dev_data:

networks:
  nestjs-dev-network:
    driver: bridge