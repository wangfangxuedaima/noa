version: '3.8'

services:
  # NestJS应用服务
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-here-docker
      - JWT_EXPIRES_IN=7d
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=nestjs
      - DB_PASSWORD=nestjs123
      - DB_DATABASE=nestjs_api
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - nestjs-network

  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=nestjs_api
      - MYSQL_USER=nestjs
      - MYSQL_PASSWORD=nestjs123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - nestjs-network

  # Redis缓存服务（可选）- 暂时注释掉
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - nestjs-network

volumes:
  mysql_data:
  # redis_data:

networks:
  nestjs-network:
    driver: bridge